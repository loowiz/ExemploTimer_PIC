

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Jun 03 22:50:27 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    21                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    22                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    23                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    25  0000                     
    26                           ; Version 2.10
    27                           ; Generated 31/07/2019 GMT
    28                           ; 
    29                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC18F4550 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     
    61                           	psect	idataCOMRAM
    62  000D44                     __pidataCOMRAM:
    63                           	opt callstack 0
    64                           
    65                           ;initializer for IniciaLCD@F3175
    66  000D44  33                 	db	51
    67  000D45  32                 	db	50
    68  000D46  28                 	db	40
    69  000D47  0C                 	db	12
    70  000D48  06                 	db	6
    71  000D49  01                 	db	1
    72                           
    73                           ;initializer for _Preset
    74  000D4A  C2F7               	dw	49911
    75  0000                     _PORTDbits	set	3971
    76  0000                     _TRISB	set	3987
    77  0000                     _TRISDbits	set	3989
    78  0000                     _INTCONbits	set	4082
    79  0000                     _TMR0L	set	4054
    80  0000                     _TMR0H	set	4055
    81  0000                     _T0CON	set	4053
    82  0000                     _RCONbits	set	4048
    83  0000                     _INTCON2bits	set	4081
    84  0000                     _INTCON	set	4082
    85  0000                     _PORTBbits	set	3969
    86  0000                     _PORTB	set	3969
    87                           
    88                           	psect	smallconst
    89  000800                     __psmallconst:
    90                           	opt callstack 0
    91  000800  00                 	db	0
    92  000801                     STR_2:
    93  000801  54                 	db	84	;'T'
    94  000802  69                 	db	105	;'i'
    95  000803  6D                 	db	109	;'m'
    96  000804  65                 	db	101	;'e'
    97  000805  72                 	db	114	;'r'
    98  000806  20                 	db	32
    99  000807  30                 	db	48	;'0'
   100  000808  3A                 	db	58	;':'
   101  000809  20                 	db	32
   102  00080A  20                 	db	32
   103  00080B  20                 	db	32
   104  00080C  20                 	db	32
   105  00080D  20                 	db	32
   106  00080E  20                 	db	32
   107  00080F  20                 	db	32
   108  000810  20                 	db	32
   109  000811  00                 	db	0
   110  000812                     STR_1:
   111  000812  20                 	db	32
   112  000813  20                 	db	32
   113  000814  20                 	db	32
   114  000815  53                 	db	83	;'S'
   115  000816  45                 	db	69	;'E'
   116  000817  4E                 	db	78	;'N'
   117  000818  41                 	db	65	;'A'
   118  000819  49                 	db	73	;'I'
   119  00081A  20                 	db	32
   120  00081B  20                 	db	32
   121  00081C  31                 	db	49	;'1'
   122  00081D  31                 	db	49	;'1'
   123  00081E  38                 	db	56	;'8'
   124  00081F  20                 	db	32
   125  000820  20                 	db	32
   126  000821  20                 	db	32
   127  000822  00                 	db	0
   128                           
   129                           ; #config settings
   130  000823  00                 	db	0	; dummy byte at the end
   131  0000                     
   132                           	psect	cinit
   133  000D10                     __pcinit:
   134                           	opt callstack 0
   135  000D10                     start_initialization:
   136                           	opt callstack 0
   137  000D10                     __initialization:
   138                           	opt callstack 0
   139                           
   140                           ; Initialize objects allocated to COMRAM (8 bytes)
   141                           ; load TBLPTR registers with __pidataCOMRAM
   142  000D10  0E44               	movlw	low __pidataCOMRAM
   143  000D12  6EF6               	movwf	tblptrl,c
   144  000D14  0E0D               	movlw	high __pidataCOMRAM
   145  000D16  6EF7               	movwf	tblptrh,c
   146  000D18  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   147  000D1A  6EF8               	movwf	tblptru,c
   148  000D1C  EE00  F010         	lfsr	0,__pdataCOMRAM
   149  000D20  EE10 F008          	lfsr	1,8
   150  000D24                     copy_data0:
   151  000D24  0009               	tblrd		*+
   152  000D26  CFF5 FFEE          	movff	tablat,postinc0
   153  000D2A  50E5               	movf	postdec1,w,c
   154  000D2C  50E1               	movf	fsr1l,w,c
   155  000D2E  E1FA               	bnz	copy_data0
   156                           
   157                           ; Clear objects allocated to COMRAM (3 bytes)
   158  000D30  6A1A               	clrf	(__pbssCOMRAM+2)& (0+255),c
   159  000D32  6A19               	clrf	(__pbssCOMRAM+1)& (0+255),c
   160  000D34  6A18               	clrf	__pbssCOMRAM& (0+255),c
   161  000D36                     end_of_initialization:
   162                           	opt callstack 0
   163  000D36                     __end_of__initialization:
   164                           	opt callstack 0
   165  000D36  901B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   166  000D38  921B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   167  000D3A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   168  000D3C  6EF8               	movwf	tblptru,c
   169  000D3E  0100               	movlb	0
   170  000D40  EF12  F004         	goto	_main	;jump to C main() function
   171                           
   172                           	psect	bssCOMRAM
   173  000018                     __pbssCOMRAM:
   174                           	opt callstack 0
   175  000018                     _Conta:
   176                           	opt callstack 0
   177  000018                     	ds	2
   178  00001A                     _Interrompeu:
   179                           	opt callstack 0
   180  00001A                     	ds	1
   181                           
   182                           	psect	dataCOMRAM
   183  000010                     __pdataCOMRAM:
   184                           	opt callstack 0
   185  000010                     IniciaLCD@F3175:
   186                           	opt callstack 0
   187  000010                     	ds	6
   188  000016                     _Preset:
   189                           	opt callstack 0
   190  000016                     	ds	2
   191                           
   192                           	psect	cstackCOMRAM
   193  000001                     __pcstackCOMRAM:
   194                           	opt callstack 0
   195  000001                     ??_ComandoLCD:
   196  000001                     ??_EscreveLCD:
   197  000001                     ?___awdiv:
   198                           	opt callstack 0
   199  000001                     Inicializa_Timer0@Interrupcao:
   200                           	opt callstack 0
   201  000001                     ___awdiv@dividend:
   202                           	opt callstack 0
   203                           
   204                           ; 2 bytes @ 0x0
   205  000001                     	ds	1
   206  000002                     ComandoLCD@i:
   207                           	opt callstack 0
   208  000002                     EscreveLCD@dado:
   209                           	opt callstack 0
   210                           
   211                           ; 1 bytes @ 0x1
   212  000002                     	ds	1
   213  000003                     ComandoLCD@dado:
   214                           	opt callstack 0
   215  000003                     EscreveLCD@i:
   216                           	opt callstack 0
   217  000003                     Inicializa_Timer0@Preset_t0:
   218                           	opt callstack 0
   219  000003                     ___awdiv@divisor:
   220                           	opt callstack 0
   221                           
   222                           ; 2 bytes @ 0x2
   223  000003                     	ds	1
   224  000004                     ??_IniciaLCD:
   225  000004                     PosicionaLCD@coluna:
   226                           	opt callstack 0
   227  000004                     StringLCD@string:
   228                           	opt callstack 0
   229                           
   230                           ; 2 bytes @ 0x3
   231  000004                     	ds	1
   232  000005                     ??_PosicionaLCD:
   233  000005                     ___awdiv@counter:
   234                           	opt callstack 0
   235  000005                     IniciaLCD@inicio:
   236                           	opt callstack 0
   237                           
   238                           ; 6 bytes @ 0x4
   239  000005                     	ds	1
   240  000006                     ___awdiv@sign:
   241                           	opt callstack 0
   242                           
   243                           ; 1 bytes @ 0x5
   244  000006                     	ds	1
   245  000007                     PosicionaLCD@linha:
   246                           	opt callstack 0
   247  000007                     ___awdiv@quotient:
   248                           	opt callstack 0
   249                           
   250                           ; 2 bytes @ 0x6
   251  000007                     	ds	1
   252  000008                     PosicionaLCD@posicao:
   253                           	opt callstack 0
   254                           
   255                           ; 1 bytes @ 0x7
   256  000008                     	ds	1
   257  000009                     ?___awmod:
   258                           	opt callstack 0
   259  000009                     ___awmod@dividend:
   260                           	opt callstack 0
   261                           
   262                           ; 2 bytes @ 0x8
   263  000009                     	ds	2
   264  00000B                     IniciaLCD@i:
   265                           	opt callstack 0
   266  00000B                     ___awmod@divisor:
   267                           	opt callstack 0
   268                           
   269                           ; 2 bytes @ 0xA
   270  00000B                     	ds	2
   271  00000D                     ___awmod@counter:
   272                           	opt callstack 0
   273                           
   274                           ; 1 bytes @ 0xC
   275  00000D                     	ds	1
   276  00000E                     ___awmod@sign:
   277                           	opt callstack 0
   278                           
   279                           ; 1 bytes @ 0xD
   280  00000E                     	ds	1
   281  00000F                     ??_main:
   282                           
   283                           ; 1 bytes @ 0xE
   284  00000F                     	ds	1
   285                           
   286 ;;
   287 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   288 ;;
   289 ;; *************** function _main *****************
   290 ;; Defined at:
   291 ;;		line 82 in file "main.c"
   292 ;; Parameters:    Size  Location     Type
   293 ;;		None
   294 ;; Auto vars:     Size  Location     Type
   295 ;;		None
   296 ;; Return value:  Size  Location     Type
   297 ;;                  1    wreg      void 
   298 ;; Registers used:
   299 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   300 ;; Tracked objects:
   301 ;;		On entry : 0/0
   302 ;;		On exit  : 0/0
   303 ;;		Unchanged: 0/0
   304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   305 ;;      Params:         0       0       0       0       0       0       0       0       0
   306 ;;      Locals:         0       0       0       0       0       0       0       0       0
   307 ;;      Temps:          1       0       0       0       0       0       0       0       0
   308 ;;      Totals:         1       0       0       0       0       0       0       0       0
   309 ;;Total ram usage:        1 bytes
   310 ;; Hardware stack levels required when called:    3
   311 ;; This function calls:
   312 ;;		_EscreveLCD
   313 ;;		_IniciaLCD
   314 ;;		_Inicializa_Timer0
   315 ;;		_PosicionaLCD
   316 ;;		_StringLCD
   317 ;;		___awdiv
   318 ;;		___awmod
   319 ;; This function is called by:
   320 ;;		Startup code after reset
   321 ;; This function uses a non-reentrant model
   322 ;;
   323                           
   324                           	psect	text0
   325  000824                     __ptext0:
   326                           	opt callstack 0
   327  000824                     _main:
   328                           	opt callstack 28
   329  000824                     
   330                           ;main.c: 86:  TRISDbits.TRISD0 = 0;
   331  000824  9095               	bcf	149,0,c	;volatile
   332  000826                     
   333                           ;main.c: 87:     TRISB = 0b00000011;
   334  000826  0E03               	movlw	3
   335  000828  6E93               	movwf	147,c	;volatile
   336  00082A                     
   337                           ;main.c: 88:  Inicializa_Timer0(1, Preset);
   338  00082A  0E00               	movlw	0
   339  00082C  6E02               	movwf	(Inicializa_Timer0@Interrupcao+1)^0,c
   340  00082E  0E01               	movlw	1
   341  000830  6E01               	movwf	Inicializa_Timer0@Interrupcao^0,c
   342  000832  C016  F003         	movff	_Preset,Inicializa_Timer0@Preset_t0
   343  000836  C017  F004         	movff	_Preset+1,Inicializa_Timer0@Preset_t0+1
   344  00083A  EC4F  F006         	call	_Inicializa_Timer0	;wreg free
   345  00083E                     
   346                           ;main.c: 89:  IniciaLCD();
   347  00083E  EC04  F006         	call	_IniciaLCD	;wreg free
   348  000842                     
   349                           ;main.c: 90:  PORTDbits.RD0 = 1;
   350  000842  8083               	bsf	131,0,c	;volatile
   351  000844                     
   352                           ;main.c: 96:  PosicionaLCD(1,1);
   353  000844  0E01               	movlw	1
   354  000846  6E04               	movwf	PosicionaLCD@coluna^0,c
   355  000848  0E01               	movlw	1
   356  00084A  EC9C  F005         	call	_PosicionaLCD
   357  00084E                     
   358                           ;main.c: 97:     StringLCD("   SENAI  118   ");
   359  00084E  0E12               	movlw	low STR_1
   360  000850  6E04               	movwf	StringLCD@string^0,c
   361  000852  0E08               	movlw	high STR_1
   362  000854  6E05               	movwf	(StringLCD@string+1)^0,c
   363  000856  EC6D  F006         	call	_StringLCD	;wreg free
   364  00085A                     
   365                           ;main.c: 98:  PosicionaLCD(2,1);
   366  00085A  0E01               	movlw	1
   367  00085C  6E04               	movwf	PosicionaLCD@coluna^0,c
   368  00085E  0E02               	movlw	2
   369  000860  EC9C  F005         	call	_PosicionaLCD
   370  000864                     
   371                           ;main.c: 99:     StringLCD("Timer 0:        ");
   372  000864  0E01               	movlw	low STR_2
   373  000866  6E04               	movwf	StringLCD@string^0,c
   374  000868  0E08               	movlw	high STR_2
   375  00086A  6E05               	movwf	(StringLCD@string+1)^0,c
   376  00086C  EC6D  F006         	call	_StringLCD	;wreg free
   377  000870                     l1197:
   378                           
   379                           ;main.c: 102:   if (Interrompeu == 1){
   380  000870  041A               	decf	_Interrompeu^0,w,c
   381  000872  A4D8               	btfss	status,2,c
   382  000874  EF3E  F004         	goto	u471
   383  000878  EF40  F004         	goto	u470
   384  00087C                     u471:
   385  00087C  EF38  F004         	goto	l1197
   386  000880                     u470:
   387  000880                     
   388                           ;main.c: 103:    PORTDbits.RD0 = ~PORTDbits.RD0;
   389  000880  B083               	btfsc	131,0,c	;volatile
   390  000882  EF45  F004         	goto	u481
   391  000886  EF48  F004         	goto	u480
   392  00088A                     u481:
   393  00088A  0E01               	movlw	1
   394  00088C  EF49  F004         	goto	u486
   395  000890                     u480:
   396  000890  0E00               	movlw	0
   397  000892                     u486:
   398  000892  0AFF               	xorlw	255
   399  000894  6E0F               	movwf	??_main^0,c
   400  000896  5083               	movf	131,w,c	;volatile
   401  000898  180F               	xorwf	??_main^0,w,c
   402  00089A  0BFE               	andlw	-2
   403  00089C  180F               	xorwf	??_main^0,w,c
   404  00089E  6E83               	movwf	131,c	;volatile
   405  0008A0                     
   406                           ;main.c: 105:             PosicionaLCD(2, 10);
   407  0008A0  0E0A               	movlw	10
   408  0008A2  6E04               	movwf	PosicionaLCD@coluna^0,c
   409  0008A4  0E02               	movlw	2
   410  0008A6  EC9C  F005         	call	_PosicionaLCD
   411  0008AA                     
   412                           ;main.c: 106:             EscreveLCD((Conta/100)%10 + 48);
   413  0008AA  0E00               	movlw	0
   414  0008AC  6E04               	movwf	(___awdiv@divisor+1)^0,c
   415  0008AE  0E64               	movlw	100
   416  0008B0  6E03               	movwf	___awdiv@divisor^0,c
   417  0008B2  C018  F001         	movff	_Conta,___awdiv@dividend
   418  0008B6  C019  F002         	movff	_Conta+1,___awdiv@dividend+1
   419  0008BA  EC99  F004         	call	___awdiv	;wreg free
   420  0008BE  C001  F009         	movff	?___awdiv,___awmod@dividend
   421  0008C2  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
   422  0008C6  0E00               	movlw	0
   423  0008C8  6E0C               	movwf	(___awmod@divisor+1)^0,c
   424  0008CA  0E0A               	movlw	10
   425  0008CC  6E0B               	movwf	___awmod@divisor^0,c
   426  0008CE  ECFB  F004         	call	___awmod	;wreg free
   427  0008D2  5009               	movf	?___awmod^0,w,c
   428  0008D4  0F30               	addlw	48
   429  0008D6  ECD5  F005         	call	_EscreveLCD
   430  0008DA                     
   431                           ;main.c: 107:             EscreveLCD((Conta/10)%10 + 48);
   432  0008DA  0E00               	movlw	0
   433  0008DC  6E04               	movwf	(___awdiv@divisor+1)^0,c
   434  0008DE  0E0A               	movlw	10
   435  0008E0  6E03               	movwf	___awdiv@divisor^0,c
   436  0008E2  C018  F001         	movff	_Conta,___awdiv@dividend
   437  0008E6  C019  F002         	movff	_Conta+1,___awdiv@dividend+1
   438  0008EA  EC99  F004         	call	___awdiv	;wreg free
   439  0008EE  C001  F009         	movff	?___awdiv,___awmod@dividend
   440  0008F2  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
   441  0008F6  0E00               	movlw	0
   442  0008F8  6E0C               	movwf	(___awmod@divisor+1)^0,c
   443  0008FA  0E0A               	movlw	10
   444  0008FC  6E0B               	movwf	___awmod@divisor^0,c
   445  0008FE  ECFB  F004         	call	___awmod	;wreg free
   446  000902  5009               	movf	?___awmod^0,w,c
   447  000904  0F30               	addlw	48
   448  000906  ECD5  F005         	call	_EscreveLCD
   449  00090A                     
   450                           ;main.c: 108:             EscreveLCD(Conta%10 + 48);
   451  00090A  C018  F009         	movff	_Conta,___awmod@dividend
   452  00090E  C019  F00A         	movff	_Conta+1,___awmod@dividend+1
   453  000912  0E00               	movlw	0
   454  000914  6E0C               	movwf	(___awmod@divisor+1)^0,c
   455  000916  0E0A               	movlw	10
   456  000918  6E0B               	movwf	___awmod@divisor^0,c
   457  00091A  ECFB  F004         	call	___awmod	;wreg free
   458  00091E  5009               	movf	?___awmod^0,w,c
   459  000920  0F30               	addlw	48
   460  000922  ECD5  F005         	call	_EscreveLCD
   461  000926                     
   462                           ;main.c: 110:             Interrompeu = 0;
   463  000926  0E00               	movlw	0
   464  000928  6E1A               	movwf	_Interrompeu^0,c
   465  00092A  EF38  F004         	goto	l1197
   466  00092E  EF07  F000         	goto	start
   467  000932                     __end_of_main:
   468                           	opt callstack 0
   469                           
   470 ;; *************** function ___awmod *****************
   471 ;; Defined at:
   472 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
   473 ;; Parameters:    Size  Location     Type
   474 ;;  dividend        2    8[COMRAM] int 
   475 ;;  divisor         2   10[COMRAM] int 
   476 ;; Auto vars:     Size  Location     Type
   477 ;;  sign            1   13[COMRAM] unsigned char 
   478 ;;  counter         1   12[COMRAM] unsigned char 
   479 ;; Return value:  Size  Location     Type
   480 ;;                  2    8[COMRAM] int 
   481 ;; Registers used:
   482 ;;		wreg, status,2, status,0
   483 ;; Tracked objects:
   484 ;;		On entry : 0/0
   485 ;;		On exit  : 0/0
   486 ;;		Unchanged: 0/0
   487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   488 ;;      Params:         4       0       0       0       0       0       0       0       0
   489 ;;      Locals:         2       0       0       0       0       0       0       0       0
   490 ;;      Temps:          0       0       0       0       0       0       0       0       0
   491 ;;      Totals:         6       0       0       0       0       0       0       0       0
   492 ;;Total ram usage:        6 bytes
   493 ;; Hardware stack levels used:    1
   494 ;; Hardware stack levels required when called:    1
   495 ;; This function calls:
   496 ;;		Nothing
   497 ;; This function is called by:
   498 ;;		_main
   499 ;; This function uses a non-reentrant model
   500 ;;
   501                           
   502                           	psect	text1
   503  0009F6                     __ptext1:
   504                           	opt callstack 0
   505  0009F6                     ___awmod:
   506                           	opt callstack 29
   507  0009F6  0E00               	movlw	0
   508  0009F8  6E0E               	movwf	___awmod@sign^0,c
   509  0009FA  BE0A               	btfsc	(___awmod@dividend+1)^0,7,c
   510  0009FC  EF04  F005         	goto	u410
   511  000A00  EF02  F005         	goto	u411
   512  000A04                     u411:
   513  000A04  EF0A  F005         	goto	l1151
   514  000A08                     u410:
   515  000A08  6C09               	negf	___awmod@dividend^0,c
   516  000A0A  1E0A               	comf	(___awmod@dividend+1)^0,f,c
   517  000A0C  B0D8               	btfsc	status,0,c
   518  000A0E  2A0A               	incf	(___awmod@dividend+1)^0,f,c
   519  000A10  0E01               	movlw	1
   520  000A12  6E0E               	movwf	___awmod@sign^0,c
   521  000A14                     l1151:
   522  000A14  BE0C               	btfsc	(___awmod@divisor+1)^0,7,c
   523  000A16  EF11  F005         	goto	u420
   524  000A1A  EF0F  F005         	goto	u421
   525  000A1E                     u421:
   526  000A1E  EF15  F005         	goto	l1155
   527  000A22                     u420:
   528  000A22  6C0B               	negf	___awmod@divisor^0,c
   529  000A24  1E0C               	comf	(___awmod@divisor+1)^0,f,c
   530  000A26  B0D8               	btfsc	status,0,c
   531  000A28  2A0C               	incf	(___awmod@divisor+1)^0,f,c
   532  000A2A                     l1155:
   533  000A2A  500B               	movf	___awmod@divisor^0,w,c
   534  000A2C  100C               	iorwf	(___awmod@divisor+1)^0,w,c
   535  000A2E  B4D8               	btfsc	status,2,c
   536  000A30  EF1C  F005         	goto	u431
   537  000A34  EF1E  F005         	goto	u430
   538  000A38                     u431:
   539  000A38  EF42  F005         	goto	l1171
   540  000A3C                     u430:
   541  000A3C  0E01               	movlw	1
   542  000A3E  6E0D               	movwf	___awmod@counter^0,c
   543  000A40  EF26  F005         	goto	l1161
   544  000A44                     l1159:
   545  000A44  90D8               	bcf	status,0,c
   546  000A46  360B               	rlcf	___awmod@divisor^0,f,c
   547  000A48  360C               	rlcf	(___awmod@divisor+1)^0,f,c
   548  000A4A  2A0D               	incf	___awmod@counter^0,f,c
   549  000A4C                     l1161:
   550  000A4C  AE0C               	btfss	(___awmod@divisor+1)^0,7,c
   551  000A4E  EF2B  F005         	goto	u441
   552  000A52  EF2D  F005         	goto	u440
   553  000A56                     u441:
   554  000A56  EF22  F005         	goto	l1159
   555  000A5A                     u440:
   556  000A5A                     l1163:
   557  000A5A  500B               	movf	___awmod@divisor^0,w,c
   558  000A5C  5C09               	subwf	___awmod@dividend^0,w,c
   559  000A5E  500C               	movf	(___awmod@divisor+1)^0,w,c
   560  000A60  580A               	subwfb	(___awmod@dividend+1)^0,w,c
   561  000A62  A0D8               	btfss	status,0,c
   562  000A64  EF36  F005         	goto	u451
   563  000A68  EF38  F005         	goto	u450
   564  000A6C                     u451:
   565  000A6C  EF3C  F005         	goto	l1167
   566  000A70                     u450:
   567  000A70  500B               	movf	___awmod@divisor^0,w,c
   568  000A72  5E09               	subwf	___awmod@dividend^0,f,c
   569  000A74  500C               	movf	(___awmod@divisor+1)^0,w,c
   570  000A76  5A0A               	subwfb	(___awmod@dividend+1)^0,f,c
   571  000A78                     l1167:
   572  000A78  90D8               	bcf	status,0,c
   573  000A7A  320C               	rrcf	(___awmod@divisor+1)^0,f,c
   574  000A7C  320B               	rrcf	___awmod@divisor^0,f,c
   575  000A7E  2E0D               	decfsz	___awmod@counter^0,f,c
   576  000A80  EF2D  F005         	goto	l1163
   577  000A84                     l1171:
   578  000A84  500E               	movf	___awmod@sign^0,w,c
   579  000A86  B4D8               	btfsc	status,2,c
   580  000A88  EF48  F005         	goto	u461
   581  000A8C  EF4A  F005         	goto	u460
   582  000A90                     u461:
   583  000A90  EF4E  F005         	goto	l1175
   584  000A94                     u460:
   585  000A94  6C09               	negf	___awmod@dividend^0,c
   586  000A96  1E0A               	comf	(___awmod@dividend+1)^0,f,c
   587  000A98  B0D8               	btfsc	status,0,c
   588  000A9A  2A0A               	incf	(___awmod@dividend+1)^0,f,c
   589  000A9C                     l1175:
   590  000A9C  C009  F009         	movff	___awmod@dividend,?___awmod
   591  000AA0  C00A  F00A         	movff	___awmod@dividend+1,?___awmod+1
   592  000AA4  0012               	return		;funcret
   593  000AA6                     __end_of___awmod:
   594                           	opt callstack 0
   595                           
   596 ;; *************** function ___awdiv *****************
   597 ;; Defined at:
   598 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
   599 ;; Parameters:    Size  Location     Type
   600 ;;  dividend        2    0[COMRAM] int 
   601 ;;  divisor         2    2[COMRAM] int 
   602 ;; Auto vars:     Size  Location     Type
   603 ;;  quotient        2    6[COMRAM] int 
   604 ;;  sign            1    5[COMRAM] unsigned char 
   605 ;;  counter         1    4[COMRAM] unsigned char 
   606 ;; Return value:  Size  Location     Type
   607 ;;                  2    0[COMRAM] int 
   608 ;; Registers used:
   609 ;;		wreg, status,2, status,0
   610 ;; Tracked objects:
   611 ;;		On entry : 0/0
   612 ;;		On exit  : 0/0
   613 ;;		Unchanged: 0/0
   614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   615 ;;      Params:         4       0       0       0       0       0       0       0       0
   616 ;;      Locals:         4       0       0       0       0       0       0       0       0
   617 ;;      Temps:          0       0       0       0       0       0       0       0       0
   618 ;;      Totals:         8       0       0       0       0       0       0       0       0
   619 ;;Total ram usage:        8 bytes
   620 ;; Hardware stack levels used:    1
   621 ;; Hardware stack levels required when called:    1
   622 ;; This function calls:
   623 ;;		Nothing
   624 ;; This function is called by:
   625 ;;		_main
   626 ;; This function uses a non-reentrant model
   627 ;;
   628                           
   629                           	psect	text2
   630  000932                     __ptext2:
   631                           	opt callstack 0
   632  000932                     ___awdiv:
   633                           	opt callstack 29
   634  000932  0E00               	movlw	0
   635  000934  6E06               	movwf	___awdiv@sign^0,c
   636  000936  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
   637  000938  EFA2  F004         	goto	u350
   638  00093C  EFA0  F004         	goto	u351
   639  000940                     u351:
   640  000940  EFA8  F004         	goto	l1107
   641  000944                     u350:
   642  000944  6C03               	negf	___awdiv@divisor^0,c
   643  000946  1E04               	comf	(___awdiv@divisor+1)^0,f,c
   644  000948  B0D8               	btfsc	status,0,c
   645  00094A  2A04               	incf	(___awdiv@divisor+1)^0,f,c
   646  00094C  0E01               	movlw	1
   647  00094E  6E06               	movwf	___awdiv@sign^0,c
   648  000950                     l1107:
   649  000950  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
   650  000952  EFAF  F004         	goto	u360
   651  000956  EFAD  F004         	goto	u361
   652  00095A                     u361:
   653  00095A  EFB5  F004         	goto	l1113
   654  00095E                     u360:
   655  00095E  6C01               	negf	___awdiv@dividend^0,c
   656  000960  1E02               	comf	(___awdiv@dividend+1)^0,f,c
   657  000962  B0D8               	btfsc	status,0,c
   658  000964  2A02               	incf	(___awdiv@dividend+1)^0,f,c
   659  000966  0E01               	movlw	1
   660  000968  1A06               	xorwf	___awdiv@sign^0,f,c
   661  00096A                     l1113:
   662  00096A  0E00               	movlw	0
   663  00096C  6E08               	movwf	(___awdiv@quotient+1)^0,c
   664  00096E  0E00               	movlw	0
   665  000970  6E07               	movwf	___awdiv@quotient^0,c
   666  000972  5003               	movf	___awdiv@divisor^0,w,c
   667  000974  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
   668  000976  B4D8               	btfsc	status,2,c
   669  000978  EFC0  F004         	goto	u371
   670  00097C  EFC2  F004         	goto	u370
   671  000980                     u371:
   672  000980  EFEA  F004         	goto	l1135
   673  000984                     u370:
   674  000984  0E01               	movlw	1
   675  000986  6E05               	movwf	___awdiv@counter^0,c
   676  000988  EFCA  F004         	goto	l1121
   677  00098C                     l1119:
   678  00098C  90D8               	bcf	status,0,c
   679  00098E  3603               	rlcf	___awdiv@divisor^0,f,c
   680  000990  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
   681  000992  2A05               	incf	___awdiv@counter^0,f,c
   682  000994                     l1121:
   683  000994  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
   684  000996  EFCF  F004         	goto	u381
   685  00099A  EFD1  F004         	goto	u380
   686  00099E                     u381:
   687  00099E  EFC6  F004         	goto	l1119
   688  0009A2                     u380:
   689  0009A2                     l1123:
   690  0009A2  90D8               	bcf	status,0,c
   691  0009A4  3607               	rlcf	___awdiv@quotient^0,f,c
   692  0009A6  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
   693  0009A8  5003               	movf	___awdiv@divisor^0,w,c
   694  0009AA  5C01               	subwf	___awdiv@dividend^0,w,c
   695  0009AC  5004               	movf	(___awdiv@divisor+1)^0,w,c
   696  0009AE  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
   697  0009B0  A0D8               	btfss	status,0,c
   698  0009B2  EFDD  F004         	goto	u391
   699  0009B6  EFDF  F004         	goto	u390
   700  0009BA                     u391:
   701  0009BA  EFE4  F004         	goto	l1131
   702  0009BE                     u390:
   703  0009BE  5003               	movf	___awdiv@divisor^0,w,c
   704  0009C0  5E01               	subwf	___awdiv@dividend^0,f,c
   705  0009C2  5004               	movf	(___awdiv@divisor+1)^0,w,c
   706  0009C4  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
   707  0009C6  8007               	bsf	___awdiv@quotient^0,0,c
   708  0009C8                     l1131:
   709  0009C8  90D8               	bcf	status,0,c
   710  0009CA  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
   711  0009CC  3203               	rrcf	___awdiv@divisor^0,f,c
   712  0009CE  2E05               	decfsz	___awdiv@counter^0,f,c
   713  0009D0  EFD1  F004         	goto	l1123
   714  0009D4                     l1135:
   715  0009D4  5006               	movf	___awdiv@sign^0,w,c
   716  0009D6  B4D8               	btfsc	status,2,c
   717  0009D8  EFF0  F004         	goto	u401
   718  0009DC  EFF2  F004         	goto	u400
   719  0009E0                     u401:
   720  0009E0  EFF6  F004         	goto	l1139
   721  0009E4                     u400:
   722  0009E4  6C07               	negf	___awdiv@quotient^0,c
   723  0009E6  1E08               	comf	(___awdiv@quotient+1)^0,f,c
   724  0009E8  B0D8               	btfsc	status,0,c
   725  0009EA  2A08               	incf	(___awdiv@quotient+1)^0,f,c
   726  0009EC                     l1139:
   727  0009EC  C007  F001         	movff	___awdiv@quotient,?___awdiv
   728  0009F0  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
   729  0009F4  0012               	return		;funcret
   730  0009F6                     __end_of___awdiv:
   731                           	opt callstack 0
   732                           
   733 ;; *************** function _StringLCD *****************
   734 ;; Defined at:
   735 ;;		line 104 in file "./lcd_4vias.h"
   736 ;; Parameters:    Size  Location     Type
   737 ;;  string          2    3[COMRAM] PTR const unsigned char 
   738 ;;		 -> STR_2(17), STR_1(17), 
   739 ;; Auto vars:     Size  Location     Type
   740 ;;		None
   741 ;; Return value:  Size  Location     Type
   742 ;;                  1    wreg      void 
   743 ;; Registers used:
   744 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   745 ;; Tracked objects:
   746 ;;		On entry : 0/0
   747 ;;		On exit  : 0/0
   748 ;;		Unchanged: 0/0
   749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   750 ;;      Params:         2       0       0       0       0       0       0       0       0
   751 ;;      Locals:         0       0       0       0       0       0       0       0       0
   752 ;;      Temps:          0       0       0       0       0       0       0       0       0
   753 ;;      Totals:         2       0       0       0       0       0       0       0       0
   754 ;;Total ram usage:        2 bytes
   755 ;; Hardware stack levels used:    1
   756 ;; Hardware stack levels required when called:    2
   757 ;; This function calls:
   758 ;;		_EscreveLCD
   759 ;; This function is called by:
   760 ;;		_main
   761 ;; This function uses a non-reentrant model
   762 ;;
   763                           
   764                           	psect	text3
   765  000CDA                     __ptext3:
   766                           	opt callstack 0
   767  000CDA                     _StringLCD:
   768                           	opt callstack 28
   769  000CDA                     
   770                           ;./lcd_4vias.h: 104: void StringLCD (const unsigned char *string);./lcd_4vias.h: 105: {;
      +                          ./lcd_4vias.h: 106:     while (*string != 0)
   771  000CDA  EF79  F006         	goto	l1063
   772  000CDE                     l1059:
   773                           
   774                           ;./lcd_4vias.h: 107:     {;./lcd_4vias.h: 108:         EscreveLCD (*string);
   775  000CDE  C004  FFF6         	movff	StringLCD@string,tblptrl
   776  000CE2  C005  FFF7         	movff	StringLCD@string+1,tblptrh
   777  000CE6                     	if	0	;tblptru may be non-zero
   778  000CE6                     	endif
   779  000CE6                     	if	0	;tblptru may be non-zero
   780  000CE6                     	endif
   781  000CE6  0008               	tblrd		*
   782  000CE8  50F5               	movf	tablat,w,c
   783  000CEA  ECD5  F005         	call	_EscreveLCD
   784  000CEE                     
   785                           ;./lcd_4vias.h: 109:         string++;
   786  000CEE  4A04               	infsnz	StringLCD@string^0,f,c
   787  000CF0  2A05               	incf	(StringLCD@string+1)^0,f,c
   788  000CF2                     l1063:
   789                           
   790                           ;./lcd_4vias.h: 106:     while (*string != 0)
   791  000CF2  C004  FFF6         	movff	StringLCD@string,tblptrl
   792  000CF6  C005  FFF7         	movff	StringLCD@string+1,tblptrh
   793  000CFA                     	if	0	;tblptru may be non-zero
   794  000CFA                     	endif
   795  000CFA                     	if	0	;tblptru may be non-zero
   796  000CFA                     	endif
   797  000CFA  0008               	tblrd		*
   798  000CFC  50F5               	movf	tablat,w,c
   799  000CFE  0900               	iorlw	0
   800  000D00  A4D8               	btfss	status,2,c
   801  000D02  EF85  F006         	goto	u321
   802  000D06  EF87  F006         	goto	u320
   803  000D0A                     u321:
   804  000D0A  EF6F  F006         	goto	l1059
   805  000D0E                     u320:
   806  000D0E  0012               	return		;funcret
   807  000D10                     __end_of_StringLCD:
   808                           	opt callstack 0
   809                           
   810 ;; *************** function _EscreveLCD *****************
   811 ;; Defined at:
   812 ;;		line 80 in file "./lcd_4vias.h"
   813 ;; Parameters:    Size  Location     Type
   814 ;;  dado            1    wreg     unsigned char 
   815 ;; Auto vars:     Size  Location     Type
   816 ;;  dado            1    1[COMRAM] unsigned char 
   817 ;;  i               1    2[COMRAM] unsigned char 
   818 ;; Return value:  Size  Location     Type
   819 ;;                  1    wreg      void 
   820 ;; Registers used:
   821 ;;		wreg, status,2, status,0
   822 ;; Tracked objects:
   823 ;;		On entry : 0/0
   824 ;;		On exit  : 0/0
   825 ;;		Unchanged: 0/0
   826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   827 ;;      Params:         0       0       0       0       0       0       0       0       0
   828 ;;      Locals:         2       0       0       0       0       0       0       0       0
   829 ;;      Temps:          1       0       0       0       0       0       0       0       0
   830 ;;      Totals:         3       0       0       0       0       0       0       0       0
   831 ;;Total ram usage:        3 bytes
   832 ;; Hardware stack levels used:    1
   833 ;; Hardware stack levels required when called:    1
   834 ;; This function calls:
   835 ;;		Nothing
   836 ;; This function is called by:
   837 ;;		_StringLCD
   838 ;;		_main
   839 ;;		_NumeroLCD
   840 ;; This function uses a non-reentrant model
   841 ;;
   842                           
   843                           	psect	text4
   844  000BAA                     __ptext4:
   845                           	opt callstack 0
   846  000BAA                     _EscreveLCD:
   847                           	opt callstack 28
   848                           
   849                           ;incstack = 0
   850                           ;EscreveLCD@dado stored from wreg
   851  000BAA  6E02               	movwf	EscreveLCD@dado^0,c
   852  000BAC                     
   853                           ;./lcd_4vias.h: 80: void EscreveLCD (unsigned char dado);./lcd_4vias.h: 81: {;./lcd_4via
      +                          s.h: 82:     unsigned char i;;./lcd_4vias.h: 84:     for (i = 0; i < 2; i++)
   854  000BAC  0E00               	movlw	0
   855  000BAE  6E03               	movwf	EscreveLCD@i^0,c
   856  000BB0                     l817:
   857                           
   858                           ;./lcd_4vias.h: 85:     {;./lcd_4vias.h: 86:         if (i) PORTB = ((PORTB & 0B00001111
      +                          ) | (dado <<4));
   859  000BB0  5003               	movf	EscreveLCD@i^0,w,c
   860  000BB2  B4D8               	btfsc	status,2,c
   861  000BB4  EFDE  F005         	goto	u51
   862  000BB8  EFE0  F005         	goto	u50
   863  000BBC                     u51:
   864  000BBC  EFEB  F005         	goto	l821
   865  000BC0                     u50:
   866  000BC0  C002  F001         	movff	EscreveLCD@dado,??_EscreveLCD
   867  000BC4  3A01               	swapf	??_EscreveLCD^0,f,c
   868  000BC6  0EF0               	movlw	240
   869  000BC8  1601               	andwf	??_EscreveLCD^0,f,c
   870  000BCA  5081               	movf	129,w,c	;volatile
   871  000BCC  0B0F               	andlw	15
   872  000BCE  1001               	iorwf	??_EscreveLCD^0,w,c
   873  000BD0  6E81               	movwf	129,c	;volatile
   874  000BD2  EFEF  F005         	goto	l823
   875  000BD6                     l821:
   876  000BD6  5081               	movf	129,w,c	;volatile
   877  000BD8  0B0F               	andlw	15
   878  000BDA  1002               	iorwf	EscreveLCD@dado^0,w,c
   879  000BDC  6E81               	movwf	129,c	;volatile
   880  000BDE                     l823:
   881                           
   882                           ;./lcd_4vias.h: 89:         PORTBbits.RB2 = 1;
   883  000BDE  8481               	bsf	129,2,c	;volatile
   884  000BE0                     
   885                           ;./lcd_4vias.h: 90:         PORTBbits.RB3 = 1;
   886  000BE0  8681               	bsf	129,3,c	;volatile
   887  000BE2                     
   888                           ;./lcd_4vias.h: 91:         _delay((unsigned long)((50)*(4000000/4000000.0)));
   889  000BE2  0E10               	movlw	16
   890  000BE4                     u497:
   891  000BE4  2EE8               	decfsz	wreg,f,c
   892  000BE6  D7FE               	bra	u497
   893  000BE8  D000               	nop2	
   894  000BEA                     
   895                           ;./lcd_4vias.h: 93:         PORTBbits.RB3 = 0;
   896  000BEA  9681               	bcf	129,3,c	;volatile
   897                           
   898                           ;./lcd_4vias.h: 94:     }
   899  000BEC  2A03               	incf	EscreveLCD@i^0,f,c
   900  000BEE  0E01               	movlw	1
   901  000BF0  6403               	cpfsgt	EscreveLCD@i^0,c
   902  000BF2  EFFD  F005         	goto	u61
   903  000BF6  EFFF  F005         	goto	u60
   904  000BFA                     u61:
   905  000BFA  EFD8  F005         	goto	l817
   906  000BFE                     u60:
   907  000BFE                     
   908                           ;./lcd_4vias.h: 96:     _delay((unsigned long)((50)*(4000000/4000000.0)));
   909  000BFE  0E10               	movlw	16
   910  000C00                     u507:
   911  000C00  2EE8               	decfsz	wreg,f,c
   912  000C02  D7FE               	bra	u507
   913  000C04  D000               	nop2	
   914  000C06  0012               	return		;funcret
   915  000C08                     __end_of_EscreveLCD:
   916                           	opt callstack 0
   917                           
   918 ;; *************** function _PosicionaLCD *****************
   919 ;; Defined at:
   920 ;;		line 153 in file "./lcd_4vias.h"
   921 ;; Parameters:    Size  Location     Type
   922 ;;  linha           1    wreg     unsigned char 
   923 ;;  coluna          1    3[COMRAM] unsigned char 
   924 ;; Auto vars:     Size  Location     Type
   925 ;;  linha           1    6[COMRAM] unsigned char 
   926 ;;  posicao         1    7[COMRAM] unsigned char 
   927 ;; Return value:  Size  Location     Type
   928 ;;                  1    wreg      void 
   929 ;; Registers used:
   930 ;;		wreg, status,2, status,0, cstack
   931 ;; Tracked objects:
   932 ;;		On entry : 0/0
   933 ;;		On exit  : 0/0
   934 ;;		Unchanged: 0/0
   935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   936 ;;      Params:         1       0       0       0       0       0       0       0       0
   937 ;;      Locals:         2       0       0       0       0       0       0       0       0
   938 ;;      Temps:          2       0       0       0       0       0       0       0       0
   939 ;;      Totals:         5       0       0       0       0       0       0       0       0
   940 ;;Total ram usage:        5 bytes
   941 ;; Hardware stack levels used:    1
   942 ;; Hardware stack levels required when called:    2
   943 ;; This function calls:
   944 ;;		_ComandoLCD
   945 ;; This function is called by:
   946 ;;		_main
   947 ;; This function uses a non-reentrant model
   948 ;;
   949                           
   950                           	psect	text5
   951  000B38                     __ptext5:
   952                           	opt callstack 0
   953  000B38                     _PosicionaLCD:
   954                           	opt callstack 28
   955                           
   956                           ;incstack = 0
   957                           ;PosicionaLCD@linha stored from wreg
   958  000B38  6E07               	movwf	PosicionaLCD@linha^0,c
   959  000B3A                     
   960                           ;./lcd_4vias.h: 153: void PosicionaLCD (unsigned char linha, unsigned char coluna);./lcd
      +                          _4vias.h: 154: {;./lcd_4vias.h: 155:     unsigned char posicao;;./lcd_4vias.h: 156:     
      +                          coluna--;
   961  000B3A  0604               	decf	PosicionaLCD@coluna^0,f,c
   962                           
   963                           ;./lcd_4vias.h: 158:     switch (linha)
   964  000B3C  EFB4  F005         	goto	l1077
   965  000B40                     l1067:
   966  000B40  5004               	movf	PosicionaLCD@coluna^0,w,c
   967  000B42  0F80               	addlw	128
   968  000B44  6E08               	movwf	PosicionaLCD@posicao^0,c
   969  000B46  EFD1  F005         	goto	l1079
   970  000B4A                     l1069:
   971  000B4A  5004               	movf	PosicionaLCD@coluna^0,w,c
   972  000B4C  0FC0               	addlw	192
   973  000B4E  6E08               	movwf	PosicionaLCD@posicao^0,c
   974  000B50  EFD1  F005         	goto	l1079
   975  000B54                     l1071:
   976  000B54  5004               	movf	PosicionaLCD@coluna^0,w,c
   977  000B56  0F94               	addlw	148
   978  000B58  6E08               	movwf	PosicionaLCD@posicao^0,c
   979  000B5A  EFD1  F005         	goto	l1079
   980  000B5E                     l1073:
   981  000B5E  5004               	movf	PosicionaLCD@coluna^0,w,c
   982  000B60  0FD4               	addlw	212
   983  000B62  6E08               	movwf	PosicionaLCD@posicao^0,c
   984  000B64  EFD1  F005         	goto	l1079
   985  000B68                     l1077:
   986  000B68  5007               	movf	PosicionaLCD@linha^0,w,c
   987  000B6A  6E05               	movwf	??_PosicionaLCD^0,c
   988  000B6C  6A06               	clrf	(??_PosicionaLCD+1)^0,c
   989                           
   990                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   991                           ; Switch size 1, requested type "simple"
   992                           ; Number of cases is 1, Range of values is 0 to 0
   993                           ; switch strategies available:
   994                           ; Name         Instructions Cycles
   995                           ; simple_byte            4     3 (average)
   996                           ;	Chosen strategy is simple_byte
   997  000B6E  5006               	movf	(??_PosicionaLCD+1)^0,w,c
   998  000B70  0A00               	xorlw	0	; case 0
   999  000B72  B4D8               	btfsc	status,2,c
  1000  000B74  EFBE  F005         	goto	l1215
  1001  000B78  EFD1  F005         	goto	l1079
  1002  000B7C                     l1215:
  1003                           
  1004                           ; Switch size 1, requested type "simple"
  1005                           ; Number of cases is 4, Range of values is 1 to 4
  1006                           ; switch strategies available:
  1007                           ; Name         Instructions Cycles
  1008                           ; simple_byte           13     7 (average)
  1009                           ;	Chosen strategy is simple_byte
  1010  000B7C  5005               	movf	??_PosicionaLCD^0,w,c
  1011  000B7E  0A01               	xorlw	1	; case 1
  1012  000B80  B4D8               	btfsc	status,2,c
  1013  000B82  EFA0  F005         	goto	l1067
  1014  000B86  0A03               	xorlw	3	; case 2
  1015  000B88  B4D8               	btfsc	status,2,c
  1016  000B8A  EFA5  F005         	goto	l1069
  1017  000B8E  0A01               	xorlw	1	; case 3
  1018  000B90  B4D8               	btfsc	status,2,c
  1019  000B92  EFAA  F005         	goto	l1071
  1020  000B96  0A07               	xorlw	7	; case 4
  1021  000B98  B4D8               	btfsc	status,2,c
  1022  000B9A  EFAF  F005         	goto	l1073
  1023  000B9E  EFD1  F005         	goto	l1079
  1024  000BA2                     l1079:
  1025                           
  1026                           ;./lcd_4vias.h: 166:     ComandoLCD (posicao);
  1027  000BA2  5008               	movf	PosicionaLCD@posicao^0,w,c
  1028  000BA4  EC53  F005         	call	_ComandoLCD
  1029  000BA8  0012               	return		;funcret
  1030  000BAA                     __end_of_PosicionaLCD:
  1031                           	opt callstack 0
  1032                           
  1033 ;; *************** function _Inicializa_Timer0 *****************
  1034 ;; Defined at:
  1035 ;;		line 25 in file "./timer0.h"
  1036 ;; Parameters:    Size  Location     Type
  1037 ;;  Interrupcao     2    0[COMRAM] int 
  1038 ;;  Preset_t0       2    2[COMRAM] unsigned int 
  1039 ;; Auto vars:     Size  Location     Type
  1040 ;;		None
  1041 ;; Return value:  Size  Location     Type
  1042 ;;                  1    wreg      void 
  1043 ;; Registers used:
  1044 ;;		wreg, status,2, status,0
  1045 ;; Tracked objects:
  1046 ;;		On entry : 0/0
  1047 ;;		On exit  : 0/0
  1048 ;;		Unchanged: 0/0
  1049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1050 ;;      Params:         4       0       0       0       0       0       0       0       0
  1051 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1052 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1053 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1054 ;;Total ram usage:        4 bytes
  1055 ;; Hardware stack levels used:    1
  1056 ;; Hardware stack levels required when called:    1
  1057 ;; This function calls:
  1058 ;;		Nothing
  1059 ;; This function is called by:
  1060 ;;		_main
  1061 ;; This function uses a non-reentrant model
  1062 ;;
  1063                           
  1064                           	psect	text6
  1065  000C9E                     __ptext6:
  1066                           	opt callstack 0
  1067  000C9E                     _Inicializa_Timer0:
  1068                           	opt callstack 29
  1069  000C9E                     
  1070                           ;./timer0.h: 26:  if(Interrupcao == 1){
  1071  000C9E  0401               	decf	Inicializa_Timer0@Interrupcao^0,w,c
  1072  000CA0  1002               	iorwf	(Inicializa_Timer0@Interrupcao+1)^0,w,c
  1073  000CA2  A4D8               	btfss	status,2,c
  1074  000CA4  EF56  F006         	goto	u331
  1075  000CA8  EF58  F006         	goto	u330
  1076  000CAC                     u331:
  1077  000CAC  EF5C  F006         	goto	l81
  1078  000CB0                     u330:
  1079  000CB0                     
  1080                           ;./timer0.h: 27:   INTCON = 0x20;
  1081  000CB0  0E20               	movlw	32
  1082  000CB2  6EF2               	movwf	242,c	;volatile
  1083  000CB4                     
  1084                           ;./timer0.h: 28:   INTCON2bits.TMR0IP = 1;
  1085  000CB4  84F1               	bsf	241,2,c	;volatile
  1086  000CB6                     
  1087                           ;./timer0.h: 29:   RCONbits.IPEN = 1;
  1088  000CB6  8ED0               	bsf	208,7,c	;volatile
  1089  000CB8                     l81:
  1090                           
  1091                           ;./timer0.h: 32:  T0CON = 0x85;
  1092  000CB8  0E85               	movlw	133
  1093  000CBA  6ED5               	movwf	213,c	;volatile
  1094                           
  1095                           ;./timer0.h: 33:  TMR0H = Preset_t0 >> 8;
  1096  000CBC  5004               	movf	(Inicializa_Timer0@Preset_t0+1)^0,w,c
  1097  000CBE  6ED7               	movwf	215,c	;volatile
  1098  000CC0                     
  1099                           ;./timer0.h: 34:  TMR0L = Preset_t0;
  1100  000CC0  C003  FFD6         	movff	Inicializa_Timer0@Preset_t0,4054	;volatile
  1101  000CC4                     
  1102                           ;./timer0.h: 35:  if(Interrupcao == 1) INTCONbits.GIEH = 1;
  1103  000CC4  0401               	decf	Inicializa_Timer0@Interrupcao^0,w,c
  1104  000CC6  1002               	iorwf	(Inicializa_Timer0@Interrupcao+1)^0,w,c
  1105  000CC8  A4D8               	btfss	status,2,c
  1106  000CCA  EF69  F006         	goto	u341
  1107  000CCE  EF6B  F006         	goto	u340
  1108  000CD2                     u341:
  1109  000CD2  EF6C  F006         	goto	l83
  1110  000CD6                     u340:
  1111  000CD6  8EF2               	bsf	242,7,c	;volatile
  1112  000CD8                     l83:
  1113  000CD8  0012               	return		;funcret
  1114  000CDA                     __end_of_Inicializa_Timer0:
  1115                           	opt callstack 0
  1116                           
  1117 ;; *************** function _IniciaLCD *****************
  1118 ;; Defined at:
  1119 ;;		line 38 in file "./lcd_4vias.h"
  1120 ;; Parameters:    Size  Location     Type
  1121 ;;		None
  1122 ;; Auto vars:     Size  Location     Type
  1123 ;;  inicio          6    4[COMRAM] unsigned char [6]
  1124 ;;  i               1   10[COMRAM] unsigned char 
  1125 ;; Return value:  Size  Location     Type
  1126 ;;                  1    wreg      void 
  1127 ;; Registers used:
  1128 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1129 ;; Tracked objects:
  1130 ;;		On entry : 0/0
  1131 ;;		On exit  : 0/0
  1132 ;;		Unchanged: 0/0
  1133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1134 ;;      Params:         0       0       0       0       0       0       0       0       0
  1135 ;;      Locals:         7       0       0       0       0       0       0       0       0
  1136 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1137 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1138 ;;Total ram usage:        8 bytes
  1139 ;; Hardware stack levels used:    1
  1140 ;; Hardware stack levels required when called:    2
  1141 ;; This function calls:
  1142 ;;		_ComandoLCD
  1143 ;; This function is called by:
  1144 ;;		_main
  1145 ;; This function uses a non-reentrant model
  1146 ;;
  1147                           
  1148                           	psect	text7
  1149  000C08                     __ptext7:
  1150                           	opt callstack 0
  1151  000C08                     _IniciaLCD:
  1152                           	opt callstack 28
  1153  000C08                     
  1154                           ;./lcd_4vias.h: 40:     unsigned char i;;./lcd_4vias.h: 41:     unsigned char inicio[6] 
      +                          = {0x33, 0x32, 0x28, 0x0C, 0x06, 0x01};
  1155  000C08  EE20  F010         	lfsr	2,IniciaLCD@F3175
  1156  000C0C  EE10  F005         	lfsr	1,IniciaLCD@inicio
  1157  000C10  0E05               	movlw	5
  1158  000C12                     u71:
  1159  000C12  CFDB FFE3          	movff	plusw2,plusw1
  1160  000C16  06E8               	decf	wreg,f,c
  1161  000C18  E2FC               	bc	u71
  1162  000C1A                     
  1163                           ;./lcd_4vias.h: 43:     PORTB = PORTB & 0B00001111;
  1164  000C1A  5081               	movf	129,w,c	;volatile
  1165  000C1C  0B0F               	andlw	15
  1166  000C1E  6E81               	movwf	129,c	;volatile
  1167  000C20                     
  1168                           ;./lcd_4vias.h: 44:     PORTBbits.RB2 = 0;
  1169  000C20  9481               	bcf	129,2,c	;volatile
  1170  000C22                     
  1171                           ;./lcd_4vias.h: 45:     PORTBbits.RB3 = 0;
  1172  000C22  9681               	bcf	129,3,c	;volatile
  1173  000C24                     
  1174                           ;./lcd_4vias.h: 47:     _delay((unsigned long)((15)*(4000000/4000.0)));
  1175  000C24  0E14               	movlw	20
  1176  000C26  6E04               	movwf	??_IniciaLCD^0,c
  1177  000C28  0E7A               	movlw	122
  1178  000C2A                     u517:
  1179  000C2A  2EE8               	decfsz	wreg,f,c
  1180  000C2C  D7FE               	bra	u517
  1181  000C2E  2E04               	decfsz	??_IniciaLCD^0,f,c
  1182  000C30  D7FC               	bra	u517
  1183  000C32                     
  1184                           ;./lcd_4vias.h: 50:     for (i = 0; i < 6; i++) ComandoLCD (inicio[i]);
  1185  000C32  0E00               	movlw	0
  1186  000C34  6E0B               	movwf	IniciaLCD@i^0,c
  1187  000C36                     l851:
  1188  000C36  0E05               	movlw	low IniciaLCD@inicio
  1189  000C38  240B               	addwf	IniciaLCD@i^0,w,c
  1190  000C3A  6ED9               	movwf	fsr2l,c
  1191  000C3C  6ADA               	clrf	fsr2h,c
  1192  000C3E  0E00               	movlw	high IniciaLCD@inicio
  1193  000C40  22DA               	addwfc	fsr2h,f,c
  1194  000C42  50DF               	movf	indf2,w,c
  1195  000C44  EC53  F005         	call	_ComandoLCD
  1196  000C48  2A0B               	incf	IniciaLCD@i^0,f,c
  1197  000C4A  0E05               	movlw	5
  1198  000C4C  640B               	cpfsgt	IniciaLCD@i^0,c
  1199  000C4E  EF2B  F006         	goto	u81
  1200  000C52  EF2D  F006         	goto	u80
  1201  000C56                     u81:
  1202  000C56  EF1B  F006         	goto	l851
  1203  000C5A                     u80:
  1204  000C5A  0012               	return		;funcret
  1205  000C5C                     __end_of_IniciaLCD:
  1206                           	opt callstack 0
  1207                           
  1208 ;; *************** function _ComandoLCD *****************
  1209 ;; Defined at:
  1210 ;;		line 56 in file "./lcd_4vias.h"
  1211 ;; Parameters:    Size  Location     Type
  1212 ;;  dado            1    wreg     unsigned char 
  1213 ;; Auto vars:     Size  Location     Type
  1214 ;;  dado            1    2[COMRAM] unsigned char 
  1215 ;;  i               1    1[COMRAM] unsigned char 
  1216 ;; Return value:  Size  Location     Type
  1217 ;;                  1    wreg      void 
  1218 ;; Registers used:
  1219 ;;		wreg, status,2, status,0
  1220 ;; Tracked objects:
  1221 ;;		On entry : 0/0
  1222 ;;		On exit  : 0/0
  1223 ;;		Unchanged: 0/0
  1224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1225 ;;      Params:         0       0       0       0       0       0       0       0       0
  1226 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1227 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1228 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1229 ;;Total ram usage:        3 bytes
  1230 ;; Hardware stack levels used:    1
  1231 ;; Hardware stack levels required when called:    1
  1232 ;; This function calls:
  1233 ;;		Nothing
  1234 ;; This function is called by:
  1235 ;;		_IniciaLCD
  1236 ;;		_PosicionaLCD
  1237 ;;		_LimpaLCD
  1238 ;; This function uses a non-reentrant model
  1239 ;;
  1240                           
  1241                           	psect	text8
  1242  000AA6                     __ptext8:
  1243                           	opt callstack 0
  1244  000AA6                     _ComandoLCD:
  1245                           	opt callstack 28
  1246                           
  1247                           ;incstack = 0
  1248                           ;ComandoLCD@dado stored from wreg
  1249  000AA6  6E03               	movwf	ComandoLCD@dado^0,c
  1250  000AA8                     
  1251                           ;./lcd_4vias.h: 56: void ComandoLCD (unsigned char dado);./lcd_4vias.h: 57: {;./lcd_4via
      +                          s.h: 58:     unsigned char i;;./lcd_4vias.h: 60:     for (i = 0; i < 2; i++)
  1252  000AA8  0E00               	movlw	0
  1253  000AAA  6E02               	movwf	ComandoLCD@i^0,c
  1254  000AAC                     l787:
  1255                           
  1256                           ;./lcd_4vias.h: 61:     {;./lcd_4vias.h: 62:         if (i) PORTB = ((PORTB & 0B00001111
      +                          ) | (dado <<4));
  1257  000AAC  5002               	movf	ComandoLCD@i^0,w,c
  1258  000AAE  B4D8               	btfsc	status,2,c
  1259  000AB0  EF5C  F005         	goto	u11
  1260  000AB4  EF5E  F005         	goto	u10
  1261  000AB8                     u11:
  1262  000AB8  EF69  F005         	goto	l791
  1263  000ABC                     u10:
  1264  000ABC  C003  F001         	movff	ComandoLCD@dado,??_ComandoLCD
  1265  000AC0  3A01               	swapf	??_ComandoLCD^0,f,c
  1266  000AC2  0EF0               	movlw	240
  1267  000AC4  1601               	andwf	??_ComandoLCD^0,f,c
  1268  000AC6  5081               	movf	129,w,c	;volatile
  1269  000AC8  0B0F               	andlw	15
  1270  000ACA  1001               	iorwf	??_ComandoLCD^0,w,c
  1271  000ACC  6E81               	movwf	129,c	;volatile
  1272  000ACE  EF6D  F005         	goto	l793
  1273  000AD2                     l791:
  1274  000AD2  5081               	movf	129,w,c	;volatile
  1275  000AD4  0B0F               	andlw	15
  1276  000AD6  1003               	iorwf	ComandoLCD@dado^0,w,c
  1277  000AD8  6E81               	movwf	129,c	;volatile
  1278  000ADA                     l793:
  1279                           
  1280                           ;./lcd_4vias.h: 65:         PORTBbits.RB2 = 0;
  1281  000ADA  9481               	bcf	129,2,c	;volatile
  1282  000ADC                     
  1283                           ;./lcd_4vias.h: 66:         PORTBbits.RB3 = 1;
  1284  000ADC  8681               	bsf	129,3,c	;volatile
  1285  000ADE                     
  1286                           ;./lcd_4vias.h: 67:         _delay((unsigned long)((50)*(4000000/4000000.0)));
  1287  000ADE  0E10               	movlw	16
  1288  000AE0                     u527:
  1289  000AE0  2EE8               	decfsz	wreg,f,c
  1290  000AE2  D7FE               	bra	u527
  1291  000AE4  D000               	nop2	
  1292  000AE6                     
  1293                           ;./lcd_4vias.h: 69:         PORTBbits.RB3 = 0;
  1294  000AE6  9681               	bcf	129,3,c	;volatile
  1295                           
  1296                           ;./lcd_4vias.h: 70:     }
  1297  000AE8  2A02               	incf	ComandoLCD@i^0,f,c
  1298  000AEA  0E01               	movlw	1
  1299  000AEC  6402               	cpfsgt	ComandoLCD@i^0,c
  1300  000AEE  EF7B  F005         	goto	u21
  1301  000AF2  EF7D  F005         	goto	u20
  1302  000AF6                     u21:
  1303  000AF6  EF56  F005         	goto	l787
  1304  000AFA                     u20:
  1305  000AFA                     
  1306                           ;./lcd_4vias.h: 72:     if ((dado == 0x01) || (dado == 0x02)) _delay((unsigned long)((2)
      +                          *(4000000/4000.0)));
  1307  000AFA  0403               	decf	ComandoLCD@dado^0,w,c
  1308  000AFC  B4D8               	btfsc	status,2,c
  1309  000AFE  EF83  F005         	goto	u31
  1310  000B02  EF85  F005         	goto	u30
  1311  000B06                     u31:
  1312  000B06  EF8E  F005         	goto	l807
  1313  000B0A                     u30:
  1314  000B0A  0E02               	movlw	2
  1315  000B0C  1803               	xorwf	ComandoLCD@dado^0,w,c
  1316  000B0E  A4D8               	btfss	status,2,c
  1317  000B10  EF8C  F005         	goto	u41
  1318  000B14  EF8E  F005         	goto	u40
  1319  000B18                     u41:
  1320  000B18  EF97  F005         	goto	l809
  1321  000B1C                     u40:
  1322  000B1C                     l807:
  1323  000B1C  0E03               	movlw	3
  1324  000B1E  6E01               	movwf	??_ComandoLCD^0,c
  1325  000B20  0E98               	movlw	152
  1326  000B22                     u537:
  1327  000B22  2EE8               	decfsz	wreg,f,c
  1328  000B24  D7FE               	bra	u537
  1329  000B26  2E01               	decfsz	??_ComandoLCD^0,f,c
  1330  000B28  D7FC               	bra	u537
  1331  000B2A  EF9B  F005         	goto	l46
  1332  000B2E                     l809:
  1333  000B2E  0E10               	movlw	16
  1334  000B30                     u547:
  1335  000B30  2EE8               	decfsz	wreg,f,c
  1336  000B32  D7FE               	bra	u547
  1337  000B34  D000               	nop2	
  1338  000B36                     l46:
  1339  000B36  0012               	return		;funcret
  1340  000B38                     __end_of_ComandoLCD:
  1341                           	opt callstack 0
  1342                           
  1343 ;; *************** function _high_isr *****************
  1344 ;; Defined at:
  1345 ;;		line 64 in file "main.c"
  1346 ;; Parameters:    Size  Location     Type
  1347 ;;		None
  1348 ;; Auto vars:     Size  Location     Type
  1349 ;;		None
  1350 ;; Return value:  Size  Location     Type
  1351 ;;                  1    wreg      void 
  1352 ;; Registers used:
  1353 ;;		wreg, status,2, status,0
  1354 ;; Tracked objects:
  1355 ;;		On entry : 0/0
  1356 ;;		On exit  : 0/0
  1357 ;;		Unchanged: 0/0
  1358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1359 ;;      Params:         0       0       0       0       0       0       0       0       0
  1360 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1361 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1362 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1363 ;;Total ram usage:        0 bytes
  1364 ;; Hardware stack levels used:    1
  1365 ;; This function calls:
  1366 ;;		Nothing
  1367 ;; This function is called by:
  1368 ;;		Interrupt level 2
  1369 ;; This function uses a non-reentrant model
  1370 ;;
  1371                           
  1372                           	psect	intcode
  1373  000008                     __pintcode:
  1374                           	opt callstack 0
  1375  000008                     _high_isr:
  1376                           	opt callstack 28
  1377                           
  1378                           ;incstack = 0
  1379  000008  821B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1380  00000A  ED2E  F006         	call	int_func,f	;refresh shadow registers
  1381                           
  1382                           	psect	intcode_body
  1383  000C5C                     __pintcode_body:
  1384                           	opt callstack 28
  1385  000C5C                     int_func:
  1386                           	opt callstack 28
  1387  000C5C  0006               	pop		; remove dummy address from shadow register refresh
  1388  000C5E                     
  1389                           ;main.c: 65:  if(INTCONbits.TMR0IF){
  1390  000C5E  A4F2               	btfss	242,2,c	;volatile
  1391  000C60  EF34  F006         	goto	i2u28_41
  1392  000C64  EF36  F006         	goto	i2u28_40
  1393  000C68                     i2u28_41:
  1394  000C68  EF4D  F006         	goto	i2l96
  1395  000C6C                     i2u28_40:
  1396  000C6C                     
  1397                           ;main.c: 66:   INTCONbits.TMR0IF = 0;
  1398  000C6C  94F2               	bcf	242,2,c	;volatile
  1399  000C6E                     
  1400                           ;main.c: 68:   TMR0H = Preset >> 8;
  1401  000C6E  5017               	movf	(_Preset+1)^0,w,c
  1402  000C70  6ED7               	movwf	215,c	;volatile
  1403  000C72                     
  1404                           ;main.c: 69:   TMR0L = Preset;
  1405  000C72  C016  FFD6         	movff	_Preset,4054	;volatile
  1406  000C76                     
  1407                           ;main.c: 71:   Conta++;
  1408  000C76  4A18               	infsnz	_Conta^0,f,c
  1409  000C78  2A19               	incf	(_Conta+1)^0,f,c
  1410  000C7A                     
  1411                           ;main.c: 72:   if(Conta==100) Conta = 0;
  1412  000C7A  0E64               	movlw	100
  1413  000C7C  1818               	xorwf	_Conta^0,w,c
  1414  000C7E  1019               	iorwf	(_Conta+1)^0,w,c
  1415  000C80  A4D8               	btfss	status,2,c
  1416  000C82  EF45  F006         	goto	i2u29_41
  1417  000C86  EF47  F006         	goto	i2u29_40
  1418  000C8A                     i2u29_41:
  1419  000C8A  EF4B  F006         	goto	i2l95
  1420  000C8E                     i2u29_40:
  1421  000C8E  0E00               	movlw	0
  1422  000C90  6E19               	movwf	(_Conta+1)^0,c
  1423  000C92  0E00               	movlw	0
  1424  000C94  6E18               	movwf	_Conta^0,c
  1425  000C96                     i2l95:
  1426                           
  1427                           ;main.c: 74:   Interrompeu = 1;
  1428  000C96  0E01               	movlw	1
  1429  000C98  6E1A               	movwf	_Interrompeu^0,c
  1430  000C9A                     i2l96:
  1431  000C9A  921B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1432  000C9C  0011               	retfie		f
  1433  000C9E                     __end_of_high_isr:
  1434                           	opt callstack 0
  1435                           
  1436                           	psect	rparam
  1437  0000                     
  1438                           	psect	temp
  1439  00001B                     btemp:
  1440                           	opt callstack 0
  1441  00001B                     	ds	1
  1442  0000                     int$flags	set	btemp
  1443  0000                     wtemp8	set	btemp+1
  1444  0000                     ttemp5	set	btemp+1
  1445  0000                     ttemp6	set	btemp+4
  1446  0000                     ttemp7	set	btemp+8
  1447                           tosu	equ	0xFFF
  1448                           tosh	equ	0xFFE
  1449                           tosl	equ	0xFFD
  1450                           stkptr	equ	0xFFC
  1451                           pclatu	equ	0xFFB
  1452                           pclath	equ	0xFFA
  1453                           pcl	equ	0xFF9
  1454                           tblptru	equ	0xFF8
  1455                           tblptrh	equ	0xFF7
  1456                           tblptrl	equ	0xFF6
  1457                           tablat	equ	0xFF5
  1458                           prodh	equ	0xFF4
  1459                           prodl	equ	0xFF3
  1460                           indf0	equ	0xFEF
  1461                           postinc0	equ	0xFEE
  1462                           postdec0	equ	0xFED
  1463                           preinc0	equ	0xFEC
  1464                           plusw0	equ	0xFEB
  1465                           fsr0h	equ	0xFEA
  1466                           fsr0l	equ	0xFE9
  1467                           wreg	equ	0xFE8
  1468                           indf1	equ	0xFE7
  1469                           postinc1	equ	0xFE6
  1470                           postdec1	equ	0xFE5
  1471                           preinc1	equ	0xFE4
  1472                           plusw1	equ	0xFE3
  1473                           fsr1h	equ	0xFE2
  1474                           fsr1l	equ	0xFE1
  1475                           bsr	equ	0xFE0
  1476                           indf2	equ	0xFDF
  1477                           postinc2	equ	0xFDE
  1478                           postdec2	equ	0xFDD
  1479                           preinc2	equ	0xFDC
  1480                           plusw2	equ	0xFDB
  1481                           fsr2h	equ	0xFDA
  1482                           fsr2l	equ	0xFD9
  1483                           status	equ	0xFD8


Data Sizes:
    Strings     34
    Constant    0
    Data        8
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     15      26
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    StringLCD@string	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_2(CODE[17]), STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->___awmod
    ___awmod->___awdiv
    _StringLCD->_EscreveLCD
    _PosicionaLCD->_ComandoLCD
    _IniciaLCD->_ComandoLCD

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    2578
                                             14 COMRAM     1     1      0
                         _EscreveLCD
                          _IniciaLCD
                  _Inicializa_Timer0
                       _PosicionaLCD
                          _StringLCD
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     752
                                              8 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     604
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _StringLCD                                            2     0      2     272
                                              3 COMRAM     2     0      2
                         _EscreveLCD
 ---------------------------------------------------------------------------------
 (2) _EscreveLCD                                           3     3      0      75
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _PosicionaLCD                                         5     4      1     470
                                              3 COMRAM     5     4      1
                         _ComandoLCD
 ---------------------------------------------------------------------------------
 (1) _Inicializa_Timer0                                    4     0      4     240
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _IniciaLCD                                            8     8      0     165
                                              3 COMRAM     8     8      0
                         _ComandoLCD
 ---------------------------------------------------------------------------------
 (2) _ComandoLCD                                           3     3      0     105
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _high_isr                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EscreveLCD
   _IniciaLCD
     _ComandoLCD
   _Inicializa_Timer0
   _PosicionaLCD
     _ComandoLCD
   _StringLCD
     _EscreveLCD
   ___awdiv
   ___awmod
     ___awdiv (ARG)

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      F      1A       1       27.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      1A      20        0.0%
DATA                 0      0      1A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Jun 03 22:50:27 2020

                          l35 0C5A                            l53 0C06                            l46 0B36  
                          l81 0CB8                            l83 0CD8                            l75 0BA8  
                          l59 0D0E                            u10 0ABC                            u11 0AB8  
                          u20 0AFA                            u21 0AF6                            u30 0B0A  
                          u31 0B06                            u40 0B1C                            u41 0B18  
                          u50 0BC0                            u51 0BBC                            u60 0BFE  
                          u61 0BFA                            u71 0C12                            u80 0C5A  
                          u81 0C56                  ___awdiv@sign 0006                   __CFG_BORV$0 000000  
                __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000  
                __CFG_CP3$OFF 000000                           l352 0AA4                    IniciaLCD@i 000B  
                         l339 09F4                           l801 0AEA                           l803 0AFA  
                         l811 0BAC                           l805 0B0A                           l821 0BD6  
                         l807 0B1C                           l831 0BEE                           l823 0BDE  
                         l809 0B2E                           l841 0C22                           l833 0BFE  
                         l825 0BE0                           l817 0BB0                           l851 0C36  
                         l843 0C24                           l835 0C08                           l827 0BE2  
                         l819 0BC0                           l781 0AA8                           l853 0C48  
                         l845 0C32                           l837 0C1A                           l829 0BEA  
                         l791 0AD2                           l855 0C4A                           l839 0C20  
                         l793 0ADA                           l795 0ADC                           l787 0AAC  
                         l797 0ADE                           l789 0ABC                           l799 0AE6  
                __CFG_CPB$OFF 000000                           u320 0D0E                           u400 09E4  
                         u321 0D0A                           u401 09E0                           u330 0CB0  
                         u410 0A08                           u331 0CAC                           u411 0A04  
                         u340 0CD6                           u420 0A22                           u341 0CD2  
                         u421 0A1E                           u350 0944                           u430 0A3C  
                         u351 0940                           u431 0A38                           u360 095E  
                         u440 0A5A                           u361 095A                           u441 0A56  
                         u370 0984                           u450 0A70                  __CFG_CPD$OFF 000000  
                         u507 0C00                           u371 0980                           u451 0A6C  
                         u380 09A2                           u460 0A94                           u517 0C2A  
                         u381 099E                           u461 0A90                           u390 09BE  
                         u470 0880                           u527 0AE0                           u391 09BA  
                         u471 087C                           u480 0890                           u537 0B22  
                         u481 088A                           u547 0B30                           u486 0892  
                         u497 0BE4                  __CFG_BOR$OFF 000000                  ___awmod@sign 000E  
                         wreg 000FE8                  __CFG_FOSC$HS 000000                   EscreveLCD@i 0003  
                __CFG_LVP$OFF 000000                  __CFG_WDT$OFF 000000                          l1101 0936  
                        l1111 0966                          l1103 0944                          l1121 0994  
                        l1113 096A                          l1105 094C                          l1201 08A0  
                        l1131 09C8                          l1123 09A2                          l1115 0972  
                        l1107 0950                          l1203 08AA                          l1061 0CEE  
                        l1133 09CE                          l1125 09A8                          l1117 0984  
                        l1109 095E                          l1205 08DA                          l1215 0B7C  
                        l1071 0B54                          l1063 0CF2                          l1127 09BE  
                        l1119 098C                          l1135 09D4                          l1151 0A14  
                        l1143 09F6                          l1207 090A                          l1073 0B5E  
                        l1065 0B3A                          l1057 0CDA                          l1137 09E4  
                        l1129 09C6                          l1161 0A4C                          l1153 0A22  
                        l1145 09FA                          l1209 0926                          l1091 0CB6  
                        l1067 0B40                          l1059 0CDE                          l1139 09EC  
                        l1163 0A5A                          l1171 0A84                          l1155 0A2A  
                        l1147 0A08                          l1093 0CC0                          l1085 0C9E  
                        l1069 0B4A                          l1077 0B68                          l1173 0A94  
                        l1165 0A70                          l1157 0A3C                          l1149 0A10  
                        l1181 0826                          l1095 0CC4                          l1087 0CB0  
                        l1079 0BA2                          l1175 0A9C                          l1167 0A78  
                        l1159 0A44                          l1191 084E                          l1183 082A  
                        l1097 0CD6                          l1089 0CB4                          l1169 0A7E  
                        l1193 085A                          l1185 083E                          l1099 0932  
                        l1195 0864                          l1187 0842                          l1179 0824  
                        l1197 0870                          l1189 0844                          l1199 0880  
                        STR_1 0812                          STR_2 0801                          i2l95 0C96  
                        i2l96 0C9A                  __CFG_WDTPS$1 000000                  __CFG_PWRT$ON 000000  
                        _main 0824                          indf2 000FDF                          fsr1l 000FE1  
                        fsr2l 000FD9                          btemp 001B                          start 000E  
               __CFG_IESO$OFF 000000                 __CFG_MCLRE$ON 000000                  ___param_bank 000000  
               __CFG_PLLDIV$1 000000                __CFG_CCP2MX$ON 000000                         ?_main 0001  
             __end_of___awdiv 09F6               __end_of___awmod 0AA6                    _ComandoLCD 0AA6  
                       _T0CON 000FD5               ___awdiv@divisor 0003               ___awdiv@counter 0005  
                       _TMR0H 000FD7                         _TMR0L 000FD6                         _PORTB 000F81  
               __CFG_USBDIV$1 000000                         _TRISB 000F93                 __CFG_WRT0$OFF 000000  
               __CFG_WRT1$OFF 000000                         _Conta 0018                 __CFG_WRT2$OFF 000000  
               __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000                __CFG_EBTR1$OFF 000000  
              __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000  
               __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000  
                       tablat 000FF5                    _EscreveLCD 0BAA                         plusw1 000FE3  
                       plusw2 000FDB                         ttemp5 001C                         ttemp6 001F  
                       ttemp7 0023                         status 000FD8                         wtemp8 001C  
              __CFG_ICPRT$OFF 000000               __initialization 0D10                  __end_of_main 0932  
                      ??_main 000F                 __activetblptr 000002              ___awdiv@dividend 0001  
          __size_of_IniciaLCD 0054                        i2l1011 0C6E                        i2l1013 0C72  
                      i2l1015 0C76                        i2l1007 0C5E                        i2l1017 0C7A  
                      i2l1009 0C6C                        i2l1019 0C8E                        _INTCON 000FF2  
              __CFG_XINST$OFF 000000                        _Preset 0016              __end_of_high_isr 0C9E  
                   ??___awdiv 0005                     ??___awmod 000D              ___awdiv@quotient 0007  
             ___awmod@divisor 000B               ___awmod@counter 000D                   ?_ComandoLCD 0001  
                __pdataCOMRAM 0010                  __mediumconst 0000                        tblptrh 000FF7  
                      tblptrl 000FF6                        tblptru 000FF8  Inicializa_Timer0@Interrupcao 0001  
          __size_of_StringLCD 0036                   ?_EscreveLCD 0001                    __accesstop 0060  
     __end_of__initialization 0D36               __CFG_PBADEN$OFF 000000                 ___rparam_used 000001  
              __pcstackCOMRAM 0001                EscreveLCD@dado 0002             __end_of_IniciaLCD 0C5C  
         __size_of_ComandoLCD 0092                   _Interrompeu 001A                IniciaLCD@F3175 0010  
              ComandoLCD@dado 0003             __end_of_StringLCD 0D10           __size_of_EscreveLCD 005E  
                     i2u28_40 0C6C                       i2u28_41 0C68                       i2u29_40 0C8E  
                     i2u29_41 0C8A                     ?_high_isr 0001               __CFG_VREGEN$OFF 000000  
           _Inicializa_Timer0 0C9E            ?_Inicializa_Timer0 0001                       __Hparam 0000  
                     __Lparam 0000                 ?_PosicionaLCD 0004                       ___awdiv 0932  
                     ___awmod 09F6           ??_Inicializa_Timer0 0005                  __psmallconst 0800  
                     __pcinit 0D10                       __ramtop 0800                       __ptext0 0824  
                     __ptext1 09F6                       __ptext2 0932                       __ptext3 0CDA  
                     __ptext4 0BAA                       __ptext5 0B38                       __ptext6 0C9E  
                     __ptext7 0C08                       __ptext8 0AA6              ___awmod@dividend 0009  
                  ??_high_isr 0001                __pintcode_body 0C5C          end_of_initialization 0D36  
   __end_of_Inicializa_Timer0 0CDA                 __Lmediumconst 0000                       int_func 0C5C  
              ??_PosicionaLCD 0005                       postdec1 000FE5                       postinc0 000FEE  
                   _PORTBbits 000F81                  ??_ComandoLCD 0001                     _PORTDbits 000F83  
                   _TRISDbits 000F95                  ??_EscreveLCD 0001            __end_of_ComandoLCD 0B38  
               __pidataCOMRAM 0D44            __end_of_EscreveLCD 0C08                     _IniciaLCD 0C08  
         start_initialization 0D10    __size_of_Inicializa_Timer0 003C              __CFG_LPT1OSC$OFF 000000  
                  ?_IniciaLCD 0001                   __pbssCOMRAM 0018                     _StringLCD 0CDA  
        __end_of_PosicionaLCD 0BAA           PosicionaLCD@posicao 0008    Inicializa_Timer0@Preset_t0 0003  
             StringLCD@string 0004             __size_of_high_isr 0C96                     __pintcode 0008  
                    ?___awdiv 0001                      ?___awmod 0009                   __smallconst 0800  
                  ?_StringLCD 0004               IniciaLCD@inicio 0005                      _RCONbits 000FD0  
                 ??_IniciaLCD 0004                   _INTCON2bits 000FF1                     copy_data0 0D24  
                    __Hrparam 0000                      __Lrparam 0000            PosicionaLCD@coluna 0004  
            __size_of___awdiv 00C4              __size_of___awmod 00B0         __size_of_PosicionaLCD 0072  
                 ??_StringLCD 0006                      _high_isr 0008                 __size_of_main 010E  
                _PosicionaLCD 0B38                      int$flags 001B         __CFG_CPUDIV$OSC1_PLL2 000000  
                  _INTCONbits 000FF2             PosicionaLCD@linha 0007                      intlevel2 0000  
                 ComandoLCD@i 0002  
